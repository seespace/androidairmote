// Generated by the protocol buffer compiler.  DO NOT EDIT!

package inair.eventcenter.proto;

@SuppressWarnings("hiding")
public interface Proto {

  // enum Version
  public static final int CURRENT = 21;

  // enum Phase
  public static final int BEGAN = 0;
  public static final int MOVED = 1;
  public static final int STATIONARY = 2;
  public static final int ENDED = 3;
  public static final int CANCELLED = 4;

  // enum SetupPhase
  public static final int REQUEST_CODE = 0;
  public static final int VERIFY_CODE = 1;
  public static final int REQUEST_RENAME = 2;
  public static final int REQUEST_WIFI_SCAN = 3;
  public static final int REQUEST_WIFI_SELECT = 4;
  public static final int REQUEST_WIFI_CONNECT = 5;

  public static final class Event extends
      com.google.protobuf.nano.ExtendableMessageNano<Event> {

    // enum Type
    public static final int DEVICE = 0;
    public static final int TOUCH = 1;
    public static final int MOTION = 2;
    public static final int KEYPRESS = 3;
    public static final int GESTURE = 4;
    public static final int HAND_MOTION = 5;
    public static final int HAND_GESTURE = 6;
    public static final int OAUTH_REQUEST = 7;
    public static final int OAUTH_RESPONSE = 8;
    public static final int SETUP_REQUEST = 9;
    public static final int SETUP_RESPONSE = 10;
    public static final int TEXT_INPUT_REQUEST = 11;
    public static final int TEXT_INPUT_RESPONSE = 12;
    public static final int FUNCTION_EVENT = 13;
    public static final int WEBVIEW_REQUEST = 14;
    public static final int WEBVIEW_RESPONSE = 15;

    private static volatile Event[] _emptyArray;
    public static Event[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Event[0];
          }
        }
      }
      return _emptyArray;
    }

    // required .inair.eventcenter.proto.Event.Type type = 1;
    public java.lang.Integer type;

    // required int64 timestamp = 2;
    public java.lang.Long timestamp;

    // optional int32 tracking_area_width = 3;
    public java.lang.Integer trackingAreaWidth;

    // optional int32 tracking_area_height = 4;
    public java.lang.Integer trackingAreaHeight;

    // optional string target = 5;
    public java.lang.String target;

    // optional string reply_to = 6;
    public java.lang.String replyTo;

    // optional .inair.eventcenter.proto.Device.Type device_type = 7;
    public java.lang.Integer deviceType;

    // required int32 version = 8;
    public java.lang.Integer version;

    public Event() {
      clear();
    }

    public Event clear() {
      type = null;
      timestamp = null;
      trackingAreaWidth = null;
      trackingAreaHeight = null;
      target = null;
      replyTo = null;
      deviceType = null;
      version = null;
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.type);
      output.writeInt64(2, this.timestamp);
      if (this.trackingAreaWidth != null) {
        output.writeInt32(3, this.trackingAreaWidth);
      }
      if (this.trackingAreaHeight != null) {
        output.writeInt32(4, this.trackingAreaHeight);
      }
      if (this.target != null) {
        output.writeString(5, this.target);
      }
      if (this.replyTo != null) {
        output.writeString(6, this.replyTo);
      }
      if (this.deviceType != null) {
        output.writeInt32(7, this.deviceType);
      }
      output.writeInt32(8, this.version);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(1, this.type);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt64Size(2, this.timestamp);
      if (this.trackingAreaWidth != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(3, this.trackingAreaWidth);
      }
      if (this.trackingAreaHeight != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(4, this.trackingAreaHeight);
      }
      if (this.target != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.target);
      }
      if (this.replyTo != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(6, this.replyTo);
      }
      if (this.deviceType != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(7, this.deviceType);
      }
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(8, this.version);
      return size;
    }

    @Override
    public Event mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case inair.eventcenter.proto.Proto.Event.DEVICE:
              case inair.eventcenter.proto.Proto.Event.TOUCH:
              case inair.eventcenter.proto.Proto.Event.MOTION:
              case inair.eventcenter.proto.Proto.Event.KEYPRESS:
              case inair.eventcenter.proto.Proto.Event.GESTURE:
              case inair.eventcenter.proto.Proto.Event.HAND_MOTION:
              case inair.eventcenter.proto.Proto.Event.HAND_GESTURE:
              case inair.eventcenter.proto.Proto.Event.OAUTH_REQUEST:
              case inair.eventcenter.proto.Proto.Event.OAUTH_RESPONSE:
              case inair.eventcenter.proto.Proto.Event.SETUP_REQUEST:
              case inair.eventcenter.proto.Proto.Event.SETUP_RESPONSE:
              case inair.eventcenter.proto.Proto.Event.TEXT_INPUT_REQUEST:
              case inair.eventcenter.proto.Proto.Event.TEXT_INPUT_RESPONSE:
              case inair.eventcenter.proto.Proto.Event.FUNCTION_EVENT:
              case inair.eventcenter.proto.Proto.Event.WEBVIEW_REQUEST:
              case inair.eventcenter.proto.Proto.Event.WEBVIEW_RESPONSE:
                this.type = value;
                break;
            }
            break;
          }
          case 16: {
            this.timestamp = input.readInt64();
            break;
          }
          case 24: {
            this.trackingAreaWidth = input.readInt32();
            break;
          }
          case 32: {
            this.trackingAreaHeight = input.readInt32();
            break;
          }
          case 42: {
            this.target = input.readString();
            break;
          }
          case 50: {
            this.replyTo = input.readString();
            break;
          }
          case 56: {
            int value = input.readInt32();
            switch (value) {
              case inair.eventcenter.proto.Proto.Device.IOS:
              case inair.eventcenter.proto.Proto.Device.ANDROID:
              case inair.eventcenter.proto.Proto.Device.LEAPMOTION:
              case inair.eventcenter.proto.Proto.Device.KINECT:
              case inair.eventcenter.proto.Proto.Device.WINDOWS:
              case inair.eventcenter.proto.Proto.Device.IR_REMOTE:
              case inair.eventcenter.proto.Proto.Device.EMULATED:
              case inair.eventcenter.proto.Proto.Device.OTHER:
                this.deviceType = value;
                break;
            }
            break;
          }
          case 64: {
            this.version = input.readInt32();
            break;
          }
        }
      }
    }

    public static Event parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Event(), data);
    }

    public static Event parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Event().mergeFrom(input);
    }
  }

  public static final class Device extends
      com.google.protobuf.nano.ExtendableMessageNano<Device> {

    // enum Type
    public static final int IOS = 0;
    public static final int ANDROID = 1;
    public static final int LEAPMOTION = 2;
    public static final int KINECT = 3;
    public static final int WINDOWS = 4;
    public static final int IR_REMOTE = 5;
    public static final int EMULATED = 6;
    public static final int OTHER = 30;

    private static volatile Device[] _emptyArray;
    public static Device[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Device[0];
          }
        }
      }
      return _emptyArray;
    }

    // required string name = 1;
    public java.lang.String name;

    // required .inair.eventcenter.proto.Device.Type type = 2;
    public java.lang.Integer type;

    // optional int32 version = 3;
    public java.lang.Integer version;

    // required string product_id = 4;
    public java.lang.String productId;

    // optional bool has_keyboard = 5;
    public java.lang.Boolean hasKeyboard;

    public Device() {
      clear();
    }

    public Device clear() {
      name = null;
      type = null;
      version = null;
      productId = null;
      hasKeyboard = null;
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.name);
      output.writeInt32(2, this.type);
      if (this.version != null) {
        output.writeInt32(3, this.version);
      }
      output.writeString(4, this.productId);
      if (this.hasKeyboard != null) {
        output.writeBool(5, this.hasKeyboard);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.name);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(2, this.type);
      if (this.version != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(3, this.version);
      }
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(4, this.productId);
      if (this.hasKeyboard != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(5, this.hasKeyboard);
      }
      return size;
    }

    @Override
    public Device mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.name = input.readString();
            break;
          }
          case 16: {
            int value = input.readInt32();
            switch (value) {
              case inair.eventcenter.proto.Proto.Device.IOS:
              case inair.eventcenter.proto.Proto.Device.ANDROID:
              case inair.eventcenter.proto.Proto.Device.LEAPMOTION:
              case inair.eventcenter.proto.Proto.Device.KINECT:
              case inair.eventcenter.proto.Proto.Device.WINDOWS:
              case inair.eventcenter.proto.Proto.Device.IR_REMOTE:
              case inair.eventcenter.proto.Proto.Device.EMULATED:
              case inair.eventcenter.proto.Proto.Device.OTHER:
                this.type = value;
                break;
            }
            break;
          }
          case 24: {
            this.version = input.readInt32();
            break;
          }
          case 34: {
            this.productId = input.readString();
            break;
          }
          case 40: {
            this.hasKeyboard = input.readBool();
            break;
          }
        }
      }
    }

    public static Device parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Device(), data);
    }

    public static Device parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Device().mergeFrom(input);
    }
  }

  public static final class DeviceEvent extends
      com.google.protobuf.nano.ExtendableMessageNano<DeviceEvent> {

    // extend .inair.eventcenter.proto.Event {
    //   optional .inair.eventcenter.proto.DeviceEvent event = 100;
    public static final com.google.protobuf.nano.Extension<
        inair.eventcenter.proto.Proto.Event,
        inair.eventcenter.proto.Proto.DeviceEvent> event =
            com.google.protobuf.nano.Extension.createMessageTyped(
                com.google.protobuf.nano.Extension.TYPE_MESSAGE,
                inair.eventcenter.proto.Proto.DeviceEvent.class,
                802);

    // enum Type
    public static final int REGISTER = 0;
    public static final int UNREGISTER = 1;
    public static final int RESPONSE = 2;

    private static final DeviceEvent[] EMPTY_ARRAY = {};
    public static DeviceEvent[] emptyArray() {
      return EMPTY_ARRAY;
    }

    // required .inair.eventcenter.proto.DeviceEvent.Type type = 1;
    public java.lang.Integer type;

    // optional .inair.eventcenter.proto.Device device = 2;
    public inair.eventcenter.proto.Proto.Device device;

    // optional bool error = 3 [default = false];
    public java.lang.Boolean error;

    // optional string reason = 4 [default = ""];
    public java.lang.String reason;

    public DeviceEvent() {
      clear();
    }

    public DeviceEvent clear() {
      type = null;
      device = null;
      error = null;
      reason = null;
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.type);
      if (this.device != null) {
        output.writeMessage(2, this.device);
      }
      if (this.error != null) {
        output.writeBool(3, this.error);
      }
      if (this.reason != null) {
        output.writeString(4, this.reason);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(1, this.type);
      if (this.device != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(2, this.device);
      }
      if (this.error != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(3, this.error);
      }
      if (this.reason != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.reason);
      }
      return size;
    }

    @Override
    public DeviceEvent mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case inair.eventcenter.proto.Proto.DeviceEvent.REGISTER:
              case inair.eventcenter.proto.Proto.DeviceEvent.UNREGISTER:
              case inair.eventcenter.proto.Proto.DeviceEvent.RESPONSE:
                this.type = value;
                break;
            }
            break;
          }
          case 18: {
            if (this.device == null) {
              this.device = new inair.eventcenter.proto.Proto.Device();
            }
            input.readMessage(this.device);
            break;
          }
          case 24: {
            this.error = input.readBool();
            break;
          }
          case 34: {
            this.reason = input.readString();
            break;
          }
        }
      }
    }

    public static DeviceEvent parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new DeviceEvent(), data);
    }

    public static DeviceEvent parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new DeviceEvent().mergeFrom(input);
    }
  }

  public static final class TouchEvent extends
      com.google.protobuf.nano.ExtendableMessageNano<TouchEvent> {

    // extend .inair.eventcenter.proto.Event {
    //   optional .inair.eventcenter.proto.TouchEvent event = 101;
    public static final com.google.protobuf.nano.Extension<
        inair.eventcenter.proto.Proto.Event,
        inair.eventcenter.proto.Proto.TouchEvent> event =
            com.google.protobuf.nano.Extension.createMessageTyped(
                com.google.protobuf.nano.Extension.TYPE_MESSAGE,
                inair.eventcenter.proto.Proto.TouchEvent.class,
                810);

    private static final TouchEvent[] EMPTY_ARRAY = {};
    public static TouchEvent[] emptyArray() {
      return EMPTY_ARRAY;
    }

    // required float location_x = 1;
    public java.lang.Float locationX;

    // required float location_y = 2;
    public java.lang.Float locationY;

    // required .inair.eventcenter.proto.Phase phase = 3;
    public java.lang.Integer phase;

    public TouchEvent() {
      clear();
    }

    public TouchEvent clear() {
      locationX = null;
      locationY = null;
      phase = null;
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeFloat(1, this.locationX);
      output.writeFloat(2, this.locationY);
      output.writeInt32(3, this.phase);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeFloatSize(1, this.locationX);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeFloatSize(2, this.locationY);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(3, this.phase);
      return size;
    }

    @Override
    public TouchEvent mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 13: {
            this.locationX = input.readFloat();
            break;
          }
          case 21: {
            this.locationY = input.readFloat();
            break;
          }
          case 24: {
            int value = input.readInt32();
            switch (value) {
              case inair.eventcenter.proto.Proto.BEGAN:
              case inair.eventcenter.proto.Proto.MOVED:
              case inair.eventcenter.proto.Proto.STATIONARY:
              case inair.eventcenter.proto.Proto.ENDED:
              case inair.eventcenter.proto.Proto.CANCELLED:
                this.phase = value;
                break;
            }
            break;
          }
        }
      }
    }

    public static TouchEvent parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new TouchEvent(), data);
    }

    public static TouchEvent parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new TouchEvent().mergeFrom(input);
    }
  }

  public static final class MotionEvent extends
      com.google.protobuf.nano.ExtendableMessageNano<MotionEvent> {

    // extend .inair.eventcenter.proto.Event {
    //   optional .inair.eventcenter.proto.MotionEvent event = 102;
    public static final com.google.protobuf.nano.Extension<
        inair.eventcenter.proto.Proto.Event,
        inair.eventcenter.proto.Proto.MotionEvent> event =
            com.google.protobuf.nano.Extension.createMessageTyped(
                com.google.protobuf.nano.Extension.TYPE_MESSAGE,
                inair.eventcenter.proto.Proto.MotionEvent.class,
                818);

    // enum Type
    public static final int SHAKE = 0;

    private static final MotionEvent[] EMPTY_ARRAY = {};
    public static MotionEvent[] emptyArray() {
      return EMPTY_ARRAY;
    }

    // required .inair.eventcenter.proto.MotionEvent.Type type = 1 [default = SHAKE];
    public java.lang.Integer type;

    public MotionEvent() {
      clear();
    }

    public MotionEvent clear() {
      type = null;
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.type);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(1, this.type);
      return size;
    }

    @Override
    public MotionEvent mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case inair.eventcenter.proto.Proto.MotionEvent.SHAKE:
                this.type = value;
                break;
            }
            break;
          }
        }
      }
    }

    public static MotionEvent parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new MotionEvent(), data);
    }

    public static MotionEvent parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new MotionEvent().mergeFrom(input);
    }
  }

  public static final class KeypressEvent extends
      com.google.protobuf.nano.ExtendableMessageNano<KeypressEvent> {

    // extend .inair.eventcenter.proto.Event {
    //   optional .inair.eventcenter.proto.KeypressEvent event = 103;
    public static final com.google.protobuf.nano.Extension<
        inair.eventcenter.proto.Proto.Event,
        inair.eventcenter.proto.Proto.KeypressEvent> event =
            com.google.protobuf.nano.Extension.createMessageTyped(
                com.google.protobuf.nano.Extension.TYPE_MESSAGE,
                inair.eventcenter.proto.Proto.KeypressEvent.class,
                826);

    // enum State
    public static final int DOWN = 0;
    public static final int UP = 1;

    private static final KeypressEvent[] EMPTY_ARRAY = {};
    public static KeypressEvent[] emptyArray() {
      return EMPTY_ARRAY;
    }

    // required .inair.eventcenter.proto.KeypressEvent.State state = 1 [default = DOWN];
    public java.lang.Integer state;

    // required int32 keycode = 2;
    public java.lang.Integer keycode;

    public KeypressEvent() {
      clear();
    }

    public KeypressEvent clear() {
      state = null;
      keycode = null;
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.state);
      output.writeInt32(2, this.keycode);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(1, this.state);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(2, this.keycode);
      return size;
    }

    @Override
    public KeypressEvent mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case inair.eventcenter.proto.Proto.KeypressEvent.DOWN:
              case inair.eventcenter.proto.Proto.KeypressEvent.UP:
                this.state = value;
                break;
            }
            break;
          }
          case 16: {
            this.keycode = input.readInt32();
            break;
          }
        }
      }
    }

    public static KeypressEvent parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new KeypressEvent(), data);
    }

    public static KeypressEvent parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new KeypressEvent().mergeFrom(input);
    }
  }

  public static final class GestureEvent extends
      com.google.protobuf.nano.ExtendableMessageNano<GestureEvent> {

    // extend .inair.eventcenter.proto.Event {
    //   optional .inair.eventcenter.proto.GestureEvent event = 104;
    public static final com.google.protobuf.nano.Extension<
        inair.eventcenter.proto.Proto.Event,
        inair.eventcenter.proto.Proto.GestureEvent> event =
            com.google.protobuf.nano.Extension.createMessageTyped(
                com.google.protobuf.nano.Extension.TYPE_MESSAGE,
                inair.eventcenter.proto.Proto.GestureEvent.class,
                834);

    // enum Type
    public static final int TAP = 0;
    public static final int PINCH = 1;
    public static final int PAN = 2;
    public static final int SWIPE = 3;
    public static final int ROTATION = 4;
    public static final int LONGPRESS = 5;
    public static final int CIRCLE = 6;
    public static final int WAVE = 7;

    // enum State
    public static final int POSSIBLE = 0;
    public static final int BEGAN = 1;
    public static final int CHANGED = 2;
    public static final int ENDED = 3;
    public static final int CANCELLED = 4;
    public static final int FAILED = 5;

    // enum SwipeDirection
    public static final int RIGHT = 0;
    public static final int LEFT = 1;
    public static final int UP = 2;
    public static final int DOWN = 3;
    public static final int FORWARD = 4;
    public static final int BACKWARD = 5;

    // enum CircleDirection
    public static final int CLOCKWISE = 0;
    public static final int COUNTER_CLOCKWISE = 1;

    private static final GestureEvent[] EMPTY_ARRAY = {};
    public static GestureEvent[] emptyArray() {
      return EMPTY_ARRAY;
    }

    // required float location_x = 1;
    public java.lang.Float locationX;

    // required float location_y = 2;
    public java.lang.Float locationY;

    // required .inair.eventcenter.proto.GestureEvent.Type type = 3;
    public java.lang.Integer type;

    // required .inair.eventcenter.proto.GestureEvent.State state = 4;
    public java.lang.Integer state;

    // optional int32 tap_count = 5;
    public java.lang.Integer tapCount;

    // optional float pinch_scale = 6;
    public java.lang.Float pinchScale;

    // optional float pinch_velocity = 7;
    public java.lang.Float pinchVelocity;

    // optional float pan_translation_x = 8;
    public java.lang.Float panTranslationX;

    // optional float pan_translation_y = 9;
    public java.lang.Float panTranslationY;

    // optional float pan_velocity_x = 10;
    public java.lang.Float panVelocityX;

    // optional float pan_velocity_y = 11;
    public java.lang.Float panVelocityY;

    // optional .inair.eventcenter.proto.GestureEvent.SwipeDirection swipe_direction = 12;
    public java.lang.Integer swipeDirection;

    // optional float rotation_angle = 13;
    public java.lang.Float rotationAngle;

    // optional float rotation_velocity = 14;
    public java.lang.Float rotationVelocity;

    // optional int64 press_duration = 15;
    public java.lang.Long pressDuration;

    // optional .inair.eventcenter.proto.GestureEvent.CircleDirection circle_direction = 16;
    public java.lang.Integer circleDirection;

    public GestureEvent() {
      clear();
    }

    public GestureEvent clear() {
      locationX = null;
      locationY = null;
      type = null;
      state = null;
      tapCount = null;
      pinchScale = null;
      pinchVelocity = null;
      panTranslationX = null;
      panTranslationY = null;
      panVelocityX = null;
      panVelocityY = null;
      swipeDirection = null;
      rotationAngle = null;
      rotationVelocity = null;
      pressDuration = null;
      circleDirection = null;
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeFloat(1, this.locationX);
      output.writeFloat(2, this.locationY);
      output.writeInt32(3, this.type);
      output.writeInt32(4, this.state);
      if (this.tapCount != null) {
        output.writeInt32(5, this.tapCount);
      }
      if (this.pinchScale != null) {
        output.writeFloat(6, this.pinchScale);
      }
      if (this.pinchVelocity != null) {
        output.writeFloat(7, this.pinchVelocity);
      }
      if (this.panTranslationX != null) {
        output.writeFloat(8, this.panTranslationX);
      }
      if (this.panTranslationY != null) {
        output.writeFloat(9, this.panTranslationY);
      }
      if (this.panVelocityX != null) {
        output.writeFloat(10, this.panVelocityX);
      }
      if (this.panVelocityY != null) {
        output.writeFloat(11, this.panVelocityY);
      }
      if (this.swipeDirection != null) {
        output.writeInt32(12, this.swipeDirection);
      }
      if (this.rotationAngle != null) {
        output.writeFloat(13, this.rotationAngle);
      }
      if (this.rotationVelocity != null) {
        output.writeFloat(14, this.rotationVelocity);
      }
      if (this.pressDuration != null) {
        output.writeInt64(15, this.pressDuration);
      }
      if (this.circleDirection != null) {
        output.writeInt32(16, this.circleDirection);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeFloatSize(1, this.locationX);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeFloatSize(2, this.locationY);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(3, this.type);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(4, this.state);
      if (this.tapCount != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(5, this.tapCount);
      }
      if (this.pinchScale != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(6, this.pinchScale);
      }
      if (this.pinchVelocity != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(7, this.pinchVelocity);
      }
      if (this.panTranslationX != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(8, this.panTranslationX);
      }
      if (this.panTranslationY != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(9, this.panTranslationY);
      }
      if (this.panVelocityX != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(10, this.panVelocityX);
      }
      if (this.panVelocityY != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(11, this.panVelocityY);
      }
      if (this.swipeDirection != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(12, this.swipeDirection);
      }
      if (this.rotationAngle != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(13, this.rotationAngle);
      }
      if (this.rotationVelocity != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(14, this.rotationVelocity);
      }
      if (this.pressDuration != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(15, this.pressDuration);
      }
      if (this.circleDirection != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(16, this.circleDirection);
      }
      return size;
    }

    @Override
    public GestureEvent mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 13: {
            this.locationX = input.readFloat();
            break;
          }
          case 21: {
            this.locationY = input.readFloat();
            break;
          }
          case 24: {
            int value = input.readInt32();
            switch (value) {
              case inair.eventcenter.proto.Proto.GestureEvent.TAP:
              case inair.eventcenter.proto.Proto.GestureEvent.PINCH:
              case inair.eventcenter.proto.Proto.GestureEvent.PAN:
              case inair.eventcenter.proto.Proto.GestureEvent.SWIPE:
              case inair.eventcenter.proto.Proto.GestureEvent.ROTATION:
              case inair.eventcenter.proto.Proto.GestureEvent.LONGPRESS:
              case inair.eventcenter.proto.Proto.GestureEvent.CIRCLE:
              case inair.eventcenter.proto.Proto.GestureEvent.WAVE:
                this.type = value;
                break;
            }
            break;
          }
          case 32: {
            int value = input.readInt32();
            switch (value) {
              case inair.eventcenter.proto.Proto.GestureEvent.POSSIBLE:
              case inair.eventcenter.proto.Proto.GestureEvent.BEGAN:
              case inair.eventcenter.proto.Proto.GestureEvent.CHANGED:
              case inair.eventcenter.proto.Proto.GestureEvent.ENDED:
              case inair.eventcenter.proto.Proto.GestureEvent.CANCELLED:
              case inair.eventcenter.proto.Proto.GestureEvent.FAILED:
                this.state = value;
                break;
            }
            break;
          }
          case 40: {
            this.tapCount = input.readInt32();
            break;
          }
          case 53: {
            this.pinchScale = input.readFloat();
            break;
          }
          case 61: {
            this.pinchVelocity = input.readFloat();
            break;
          }
          case 69: {
            this.panTranslationX = input.readFloat();
            break;
          }
          case 77: {
            this.panTranslationY = input.readFloat();
            break;
          }
          case 85: {
            this.panVelocityX = input.readFloat();
            break;
          }
          case 93: {
            this.panVelocityY = input.readFloat();
            break;
          }
          case 96: {
            int value = input.readInt32();
            switch (value) {
              case inair.eventcenter.proto.Proto.GestureEvent.RIGHT:
              case inair.eventcenter.proto.Proto.GestureEvent.LEFT:
              case inair.eventcenter.proto.Proto.GestureEvent.UP:
              case inair.eventcenter.proto.Proto.GestureEvent.DOWN:
              case inair.eventcenter.proto.Proto.GestureEvent.FORWARD:
              case inair.eventcenter.proto.Proto.GestureEvent.BACKWARD:
                this.swipeDirection = value;
                break;
            }
            break;
          }
          case 109: {
            this.rotationAngle = input.readFloat();
            break;
          }
          case 117: {
            this.rotationVelocity = input.readFloat();
            break;
          }
          case 120: {
            this.pressDuration = input.readInt64();
            break;
          }
          case 128: {
            int value = input.readInt32();
            switch (value) {
              case inair.eventcenter.proto.Proto.GestureEvent.CLOCKWISE:
              case inair.eventcenter.proto.Proto.GestureEvent.COUNTER_CLOCKWISE:
                this.circleDirection = value;
                break;
            }
            break;
          }
        }
      }
    }

    public static GestureEvent parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new GestureEvent(), data);
    }

    public static GestureEvent parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new GestureEvent().mergeFrom(input);
    }
  }

  public static final class HandMotionEvent extends
      com.google.protobuf.nano.ExtendableMessageNano<HandMotionEvent> {

    // extend .inair.eventcenter.proto.Event {
    //   optional .inair.eventcenter.proto.HandMotionEvent event = 105;
    public static final com.google.protobuf.nano.Extension<
        inair.eventcenter.proto.Proto.Event,
        inair.eventcenter.proto.Proto.HandMotionEvent> event =
            com.google.protobuf.nano.Extension.createMessageTyped(
                com.google.protobuf.nano.Extension.TYPE_MESSAGE,
                inair.eventcenter.proto.Proto.HandMotionEvent.class,
                842);

    // enum State
    public static final int OPEN = 0;
    public static final int GRAB = 1;
    public static final int PINCH = 2;

    private static final HandMotionEvent[] EMPTY_ARRAY = {};
    public static HandMotionEvent[] emptyArray() {
      return EMPTY_ARRAY;
    }

    // required float location_x = 1;
    public java.lang.Float locationX;

    // required float location_y = 2;
    public java.lang.Float locationY;

    // required .inair.eventcenter.proto.HandMotionEvent.State state = 3;
    public java.lang.Integer state;

    // required .inair.eventcenter.proto.Phase phase = 4;
    public java.lang.Integer phase;

    // optional float pitch = 5;
    public java.lang.Float pitch;

    // optional float yaw = 6;
    public java.lang.Float yaw;

    // optional float roll = 7;
    public java.lang.Float roll;

    public HandMotionEvent() {
      clear();
    }

    public HandMotionEvent clear() {
      locationX = null;
      locationY = null;
      state = null;
      phase = null;
      pitch = null;
      yaw = null;
      roll = null;
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeFloat(1, this.locationX);
      output.writeFloat(2, this.locationY);
      output.writeInt32(3, this.state);
      output.writeInt32(4, this.phase);
      if (this.pitch != null) {
        output.writeFloat(5, this.pitch);
      }
      if (this.yaw != null) {
        output.writeFloat(6, this.yaw);
      }
      if (this.roll != null) {
        output.writeFloat(7, this.roll);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeFloatSize(1, this.locationX);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeFloatSize(2, this.locationY);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(3, this.state);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(4, this.phase);
      if (this.pitch != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(5, this.pitch);
      }
      if (this.yaw != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(6, this.yaw);
      }
      if (this.roll != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(7, this.roll);
      }
      return size;
    }

    @Override
    public HandMotionEvent mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 13: {
            this.locationX = input.readFloat();
            break;
          }
          case 21: {
            this.locationY = input.readFloat();
            break;
          }
          case 24: {
            int value = input.readInt32();
            switch (value) {
              case inair.eventcenter.proto.Proto.HandMotionEvent.OPEN:
              case inair.eventcenter.proto.Proto.HandMotionEvent.GRAB:
              case inair.eventcenter.proto.Proto.HandMotionEvent.PINCH:
                this.state = value;
                break;
            }
            break;
          }
          case 32: {
            int value = input.readInt32();
            switch (value) {
              case inair.eventcenter.proto.Proto.BEGAN:
              case inair.eventcenter.proto.Proto.MOVED:
              case inair.eventcenter.proto.Proto.STATIONARY:
              case inair.eventcenter.proto.Proto.ENDED:
              case inair.eventcenter.proto.Proto.CANCELLED:
                this.phase = value;
                break;
            }
            break;
          }
          case 45: {
            this.pitch = input.readFloat();
            break;
          }
          case 53: {
            this.yaw = input.readFloat();
            break;
          }
          case 61: {
            this.roll = input.readFloat();
            break;
          }
        }
      }
    }

    public static HandMotionEvent parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new HandMotionEvent(), data);
    }

    public static HandMotionEvent parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new HandMotionEvent().mergeFrom(input);
    }
  }

  public static final class OAuthRequestEvent extends
      com.google.protobuf.nano.ExtendableMessageNano<OAuthRequestEvent> {

    // extend .inair.eventcenter.proto.Event {
    //   optional .inair.eventcenter.proto.OAuthRequestEvent event = 106;
    public static final com.google.protobuf.nano.Extension<
        inair.eventcenter.proto.Proto.Event,
        inair.eventcenter.proto.Proto.OAuthRequestEvent> event =
            com.google.protobuf.nano.Extension.createMessageTyped(
                com.google.protobuf.nano.Extension.TYPE_MESSAGE,
                inair.eventcenter.proto.Proto.OAuthRequestEvent.class,
                850);

    private static final OAuthRequestEvent[] EMPTY_ARRAY = {};
    public static OAuthRequestEvent[] emptyArray() {
      return EMPTY_ARRAY;
    }

    // required string auth_url = 1;
    public java.lang.String authUrl;

    public OAuthRequestEvent() {
      clear();
    }

    public OAuthRequestEvent clear() {
      authUrl = null;
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.authUrl);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.authUrl);
      return size;
    }

    @Override
    public OAuthRequestEvent mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.authUrl = input.readString();
            break;
          }
        }
      }
    }

    public static OAuthRequestEvent parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new OAuthRequestEvent(), data);
    }

    public static OAuthRequestEvent parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new OAuthRequestEvent().mergeFrom(input);
    }
  }

  public static final class OAuthResponseEvent extends
      com.google.protobuf.nano.ExtendableMessageNano<OAuthResponseEvent> {

    // extend .inair.eventcenter.proto.Event {
    //   optional .inair.eventcenter.proto.OAuthResponseEvent event = 107;
    public static final com.google.protobuf.nano.Extension<
        inair.eventcenter.proto.Proto.Event,
        inair.eventcenter.proto.Proto.OAuthResponseEvent> event =
            com.google.protobuf.nano.Extension.createMessageTyped(
                com.google.protobuf.nano.Extension.TYPE_MESSAGE,
                inair.eventcenter.proto.Proto.OAuthResponseEvent.class,
                858);

    private static final OAuthResponseEvent[] EMPTY_ARRAY = {};
    public static OAuthResponseEvent[] emptyArray() {
      return EMPTY_ARRAY;
    }

    // optional string auth_code = 1;
    public java.lang.String authCode;

    // optional string query_string = 2;
    public java.lang.String queryString;

    public OAuthResponseEvent() {
      clear();
    }

    public OAuthResponseEvent clear() {
      authCode = null;
      queryString = null;
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.authCode != null) {
        output.writeString(1, this.authCode);
      }
      if (this.queryString != null) {
        output.writeString(2, this.queryString);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.authCode != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.authCode);
      }
      if (this.queryString != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.queryString);
      }
      return size;
    }

    @Override
    public OAuthResponseEvent mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.authCode = input.readString();
            break;
          }
          case 18: {
            this.queryString = input.readString();
            break;
          }
        }
      }
    }

    public static OAuthResponseEvent parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new OAuthResponseEvent(), data);
    }

    public static OAuthResponseEvent parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new OAuthResponseEvent().mergeFrom(input);
    }
  }

  public static final class WifiNetwork extends
      com.google.protobuf.nano.ExtendableMessageNano<WifiNetwork> {

    private static volatile WifiNetwork[] _emptyArray;
    public static WifiNetwork[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new WifiNetwork[0];
          }
        }
      }
      return _emptyArray;
    }

    // required string ssid = 1;
    public java.lang.String ssid;

    // optional int32 strength = 2;
    public java.lang.Integer strength;

    // optional string bssid = 3;
    public java.lang.String bssid;

    // optional string capabilities = 4;
    public java.lang.String capabilities;

    public WifiNetwork() {
      clear();
    }

    public WifiNetwork clear() {
      ssid = null;
      strength = null;
      bssid = null;
      capabilities = null;
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.ssid);
      if (this.strength != null) {
        output.writeInt32(2, this.strength);
      }
      if (this.bssid != null) {
        output.writeString(3, this.bssid);
      }
      if (this.capabilities != null) {
        output.writeString(4, this.capabilities);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.ssid);
      if (this.strength != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(2, this.strength);
      }
      if (this.bssid != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.bssid);
      }
      if (this.capabilities != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.capabilities);
      }
      return size;
    }

    @Override
    public WifiNetwork mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.ssid = input.readString();
            break;
          }
          case 16: {
            this.strength = input.readInt32();
            break;
          }
          case 26: {
            this.bssid = input.readString();
            break;
          }
          case 34: {
            this.capabilities = input.readString();
            break;
          }
        }
      }
    }

    public static WifiNetwork parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new WifiNetwork(), data);
    }

    public static WifiNetwork parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new WifiNetwork().mergeFrom(input);
    }
  }

  public static final class SetupRequestEvent extends
      com.google.protobuf.nano.ExtendableMessageNano<SetupRequestEvent> {

    // extend .inair.eventcenter.proto.Event {
    //   optional .inair.eventcenter.proto.SetupRequestEvent event = 108;
    public static final com.google.protobuf.nano.Extension<
        inair.eventcenter.proto.Proto.Event,
        inair.eventcenter.proto.Proto.SetupRequestEvent> event =
            com.google.protobuf.nano.Extension.createMessageTyped(
                com.google.protobuf.nano.Extension.TYPE_MESSAGE,
                inair.eventcenter.proto.Proto.SetupRequestEvent.class,
                866);

    private static final SetupRequestEvent[] EMPTY_ARRAY = {};
    public static SetupRequestEvent[] emptyArray() {
      return EMPTY_ARRAY;
    }

    // required .inair.eventcenter.proto.SetupPhase phase = 1;
    public java.lang.Integer phase;

    // optional string name = 2;
    public java.lang.String name;

    // optional string ssid = 3;
    public java.lang.String ssid;

    // optional string password = 4;
    public java.lang.String password;

    // optional bool back = 5 [default = false];
    public java.lang.Boolean back;

    public SetupRequestEvent() {
      clear();
    }

    public SetupRequestEvent clear() {
      phase = null;
      name = null;
      ssid = null;
      password = null;
      back = null;
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.phase);
      if (this.name != null) {
        output.writeString(2, this.name);
      }
      if (this.ssid != null) {
        output.writeString(3, this.ssid);
      }
      if (this.password != null) {
        output.writeString(4, this.password);
      }
      if (this.back != null) {
        output.writeBool(5, this.back);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(1, this.phase);
      if (this.name != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.name);
      }
      if (this.ssid != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.ssid);
      }
      if (this.password != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.password);
      }
      if (this.back != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(5, this.back);
      }
      return size;
    }

    @Override
    public SetupRequestEvent mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case inair.eventcenter.proto.Proto.REQUEST_CODE:
              case inair.eventcenter.proto.Proto.VERIFY_CODE:
              case inair.eventcenter.proto.Proto.REQUEST_RENAME:
              case inair.eventcenter.proto.Proto.REQUEST_WIFI_SCAN:
              case inair.eventcenter.proto.Proto.REQUEST_WIFI_SELECT:
              case inair.eventcenter.proto.Proto.REQUEST_WIFI_CONNECT:
                this.phase = value;
                break;
            }
            break;
          }
          case 18: {
            this.name = input.readString();
            break;
          }
          case 26: {
            this.ssid = input.readString();
            break;
          }
          case 34: {
            this.password = input.readString();
            break;
          }
          case 40: {
            this.back = input.readBool();
            break;
          }
        }
      }
    }

    public static SetupRequestEvent parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new SetupRequestEvent(), data);
    }

    public static SetupRequestEvent parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new SetupRequestEvent().mergeFrom(input);
    }
  }

  public static final class SetupResponseEvent extends
      com.google.protobuf.nano.ExtendableMessageNano<SetupResponseEvent> {

    // extend .inair.eventcenter.proto.Event {
    //   optional .inair.eventcenter.proto.SetupResponseEvent event = 109;
    public static final com.google.protobuf.nano.Extension<
        inair.eventcenter.proto.Proto.Event,
        inair.eventcenter.proto.Proto.SetupResponseEvent> event =
            com.google.protobuf.nano.Extension.createMessageTyped(
                com.google.protobuf.nano.Extension.TYPE_MESSAGE,
                inair.eventcenter.proto.Proto.SetupResponseEvent.class,
                874);

    private static final SetupResponseEvent[] EMPTY_ARRAY = {};
    public static SetupResponseEvent[] emptyArray() {
      return EMPTY_ARRAY;
    }

    // required .inair.eventcenter.proto.SetupPhase phase = 1;
    public java.lang.Integer phase;

    // required bool error = 2;
    public java.lang.Boolean error;

    // optional string error_message = 3;
    public java.lang.String errorMessage;

    // optional string code = 4;
    public java.lang.String code;

    // repeated .inair.eventcenter.proto.WifiNetwork wifi_networks = 5;
    public inair.eventcenter.proto.Proto.WifiNetwork[] wifiNetworks;

    public SetupResponseEvent() {
      clear();
    }

    public SetupResponseEvent clear() {
      phase = null;
      error = null;
      errorMessage = null;
      code = null;
      wifiNetworks = inair.eventcenter.proto.Proto.WifiNetwork.emptyArray();
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.phase);
      output.writeBool(2, this.error);
      if (this.errorMessage != null) {
        output.writeString(3, this.errorMessage);
      }
      if (this.code != null) {
        output.writeString(4, this.code);
      }
      if (this.wifiNetworks != null && this.wifiNetworks.length > 0) {
        for (int i = 0; i < this.wifiNetworks.length; i++) {
          inair.eventcenter.proto.Proto.WifiNetwork element = this.wifiNetworks[i];
          if (element != null) {
            output.writeMessage(5, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(1, this.phase);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBoolSize(2, this.error);
      if (this.errorMessage != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.errorMessage);
      }
      if (this.code != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.code);
      }
      if (this.wifiNetworks != null && this.wifiNetworks.length > 0) {
        for (int i = 0; i < this.wifiNetworks.length; i++) {
          inair.eventcenter.proto.Proto.WifiNetwork element = this.wifiNetworks[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(5, element);
          }
        }
      }
      return size;
    }

    @Override
    public SetupResponseEvent mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case inair.eventcenter.proto.Proto.REQUEST_CODE:
              case inair.eventcenter.proto.Proto.VERIFY_CODE:
              case inair.eventcenter.proto.Proto.REQUEST_RENAME:
              case inair.eventcenter.proto.Proto.REQUEST_WIFI_SCAN:
              case inair.eventcenter.proto.Proto.REQUEST_WIFI_SELECT:
              case inair.eventcenter.proto.Proto.REQUEST_WIFI_CONNECT:
                this.phase = value;
                break;
            }
            break;
          }
          case 16: {
            this.error = input.readBool();
            break;
          }
          case 26: {
            this.errorMessage = input.readString();
            break;
          }
          case 34: {
            this.code = input.readString();
            break;
          }
          case 42: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 42);
            int i = this.wifiNetworks == null ? 0 : this.wifiNetworks.length;
            inair.eventcenter.proto.Proto.WifiNetwork[] newArray =
                new inair.eventcenter.proto.Proto.WifiNetwork[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.wifiNetworks, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new inair.eventcenter.proto.Proto.WifiNetwork();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new inair.eventcenter.proto.Proto.WifiNetwork();
            input.readMessage(newArray[i]);
            this.wifiNetworks = newArray;
            break;
          }
        }
      }
    }

    public static SetupResponseEvent parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new SetupResponseEvent(), data);
    }

    public static SetupResponseEvent parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new SetupResponseEvent().mergeFrom(input);
    }
  }

  public static final class TextInputRequestEvent extends
      com.google.protobuf.nano.ExtendableMessageNano<TextInputRequestEvent> {

    // extend .inair.eventcenter.proto.Event {
    //   optional .inair.eventcenter.proto.TextInputRequestEvent event = 110;
    public static final com.google.protobuf.nano.Extension<
        inair.eventcenter.proto.Proto.Event,
        inair.eventcenter.proto.Proto.TextInputRequestEvent> event =
            com.google.protobuf.nano.Extension.createMessageTyped(
                com.google.protobuf.nano.Extension.TYPE_MESSAGE,
                inair.eventcenter.proto.Proto.TextInputRequestEvent.class,
                882);

    // enum Type
    public static final int TEXT = 0;
    public static final int PASSWORD = 1;

    private static final TextInputRequestEvent[] EMPTY_ARRAY = {};
    public static TextInputRequestEvent[] emptyArray() {
      return EMPTY_ARRAY;
    }

    // required .inair.eventcenter.proto.TextInputRequestEvent.Type type = 1 [default = TEXT];
    public java.lang.Integer type;

    // optional int32 max_length = 2;
    public java.lang.Integer maxLength;

    public TextInputRequestEvent() {
      clear();
    }

    public TextInputRequestEvent clear() {
      type = null;
      maxLength = null;
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.type);
      if (this.maxLength != null) {
        output.writeInt32(2, this.maxLength);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(1, this.type);
      if (this.maxLength != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(2, this.maxLength);
      }
      return size;
    }

    @Override
    public TextInputRequestEvent mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case inair.eventcenter.proto.Proto.TextInputRequestEvent.TEXT:
              case inair.eventcenter.proto.Proto.TextInputRequestEvent.PASSWORD:
                this.type = value;
                break;
            }
            break;
          }
          case 16: {
            this.maxLength = input.readInt32();
            break;
          }
        }
      }
    }

    public static TextInputRequestEvent parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new TextInputRequestEvent(), data);
    }

    public static TextInputRequestEvent parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new TextInputRequestEvent().mergeFrom(input);
    }
  }

  public static final class TextInputResponseEvent extends
      com.google.protobuf.nano.ExtendableMessageNano<TextInputResponseEvent> {

    // extend .inair.eventcenter.proto.Event {
    //   optional .inair.eventcenter.proto.TextInputResponseEvent event = 111;
    public static final com.google.protobuf.nano.Extension<
        inair.eventcenter.proto.Proto.Event,
        inair.eventcenter.proto.Proto.TextInputResponseEvent> event =
            com.google.protobuf.nano.Extension.createMessageTyped(
                com.google.protobuf.nano.Extension.TYPE_MESSAGE,
                inair.eventcenter.proto.Proto.TextInputResponseEvent.class,
                890);

    // enum State
    public static final int BEGAN = 0;
    public static final int CHANGED = 1;
    public static final int ENDED = 2;
    public static final int CANCELLED = 3;

    private static final TextInputResponseEvent[] EMPTY_ARRAY = {};
    public static TextInputResponseEvent[] emptyArray() {
      return EMPTY_ARRAY;
    }

    // required .inair.eventcenter.proto.TextInputResponseEvent.State state = 1;
    public java.lang.Integer state;

    // required string text = 2;
    public java.lang.String text;

    // optional bool encrypted = 3 [default = false];
    public java.lang.Boolean encrypted;

    public TextInputResponseEvent() {
      clear();
    }

    public TextInputResponseEvent clear() {
      state = null;
      text = null;
      encrypted = null;
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.state);
      output.writeString(2, this.text);
      if (this.encrypted != null) {
        output.writeBool(3, this.encrypted);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(1, this.state);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.text);
      if (this.encrypted != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(3, this.encrypted);
      }
      return size;
    }

    @Override
    public TextInputResponseEvent mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case inair.eventcenter.proto.Proto.TextInputResponseEvent.BEGAN:
              case inair.eventcenter.proto.Proto.TextInputResponseEvent.CHANGED:
              case inair.eventcenter.proto.Proto.TextInputResponseEvent.ENDED:
              case inair.eventcenter.proto.Proto.TextInputResponseEvent.CANCELLED:
                this.state = value;
                break;
            }
            break;
          }
          case 18: {
            this.text = input.readString();
            break;
          }
          case 24: {
            this.encrypted = input.readBool();
            break;
          }
        }
      }
    }

    public static TextInputResponseEvent parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new TextInputResponseEvent(), data);
    }

    public static TextInputResponseEvent parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new TextInputResponseEvent().mergeFrom(input);
    }
  }

  public static final class FunctionEvent extends
      com.google.protobuf.nano.ExtendableMessageNano<FunctionEvent> {

    // extend .inair.eventcenter.proto.Event {
    //   optional .inair.eventcenter.proto.FunctionEvent event = 112;
    public static final com.google.protobuf.nano.Extension<
        inair.eventcenter.proto.Proto.Event,
        inair.eventcenter.proto.Proto.FunctionEvent> event =
            com.google.protobuf.nano.Extension.createMessageTyped(
                com.google.protobuf.nano.Extension.TYPE_MESSAGE,
                inair.eventcenter.proto.Proto.FunctionEvent.class,
                898);

    // enum Key
    public static final int F1 = 0;
    public static final int F2 = 1;
    public static final int F3 = 2;
    public static final int F4 = 3;
    public static final int MediaPlay = 4;
    public static final int MediaPause = 5;
    public static final int MediaFastForward = 6;
    public static final int MediaRewind = 7;
    public static final int MediaStop = 8;

    private static final FunctionEvent[] EMPTY_ARRAY = {};
    public static FunctionEvent[] emptyArray() {
      return EMPTY_ARRAY;
    }

    // required .inair.eventcenter.proto.FunctionEvent.Key key = 1;
    public java.lang.Integer key;

    public FunctionEvent() {
      clear();
    }

    public FunctionEvent clear() {
      key = null;
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.key);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(1, this.key);
      return size;
    }

    @Override
    public FunctionEvent mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case inair.eventcenter.proto.Proto.FunctionEvent.F1:
              case inair.eventcenter.proto.Proto.FunctionEvent.F2:
              case inair.eventcenter.proto.Proto.FunctionEvent.F3:
              case inair.eventcenter.proto.Proto.FunctionEvent.F4:
              case inair.eventcenter.proto.Proto.FunctionEvent.MediaPlay:
              case inair.eventcenter.proto.Proto.FunctionEvent.MediaPause:
              case inair.eventcenter.proto.Proto.FunctionEvent.MediaFastForward:
              case inair.eventcenter.proto.Proto.FunctionEvent.MediaRewind:
              case inair.eventcenter.proto.Proto.FunctionEvent.MediaStop:
                this.key = value;
                break;
            }
            break;
          }
        }
      }
    }

    public static FunctionEvent parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new FunctionEvent(), data);
    }

    public static FunctionEvent parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new FunctionEvent().mergeFrom(input);
    }
  }

  public static final class WebViewRequestEvent extends
      com.google.protobuf.nano.ExtendableMessageNano<WebViewRequestEvent> {

    // extend .inair.eventcenter.proto.Event {
    //   optional .inair.eventcenter.proto.WebViewRequestEvent event = 113;
    public static final com.google.protobuf.nano.Extension<
        inair.eventcenter.proto.Proto.Event,
        inair.eventcenter.proto.Proto.WebViewRequestEvent> event =
            com.google.protobuf.nano.Extension.createMessageTyped(
                com.google.protobuf.nano.Extension.TYPE_MESSAGE,
                inair.eventcenter.proto.Proto.WebViewRequestEvent.class,
                906);

    private static final WebViewRequestEvent[] EMPTY_ARRAY = {};
    public static WebViewRequestEvent[] emptyArray() {
      return EMPTY_ARRAY;
    }

    // optional string url = 1 [default = ""];
    public java.lang.String url;

    public WebViewRequestEvent() {
      clear();
    }

    public WebViewRequestEvent clear() {
      url = null;
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.url != null) {
        output.writeString(1, this.url);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.url != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.url);
      }
      return size;
    }

    @Override
    public WebViewRequestEvent mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.url = input.readString();
            break;
          }
        }
      }
    }

    public static WebViewRequestEvent parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new WebViewRequestEvent(), data);
    }

    public static WebViewRequestEvent parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new WebViewRequestEvent().mergeFrom(input);
    }
  }

  public static final class WebViewResponseEvent extends
      com.google.protobuf.nano.ExtendableMessageNano<WebViewResponseEvent> {

    // extend .inair.eventcenter.proto.Event {
    //   optional .inair.eventcenter.proto.WebViewResponseEvent event = 114;
    public static final com.google.protobuf.nano.Extension<
        inair.eventcenter.proto.Proto.Event,
        inair.eventcenter.proto.Proto.WebViewResponseEvent> event =
            com.google.protobuf.nano.Extension.createMessageTyped(
                com.google.protobuf.nano.Extension.TYPE_MESSAGE,
                inair.eventcenter.proto.Proto.WebViewResponseEvent.class,
                914);

    private static final WebViewResponseEvent[] EMPTY_ARRAY = {};
    public static WebViewResponseEvent[] emptyArray() {
      return EMPTY_ARRAY;
    }

    // optional string data = 1 [default = ""];
    public java.lang.String data;

    public WebViewResponseEvent() {
      clear();
    }

    public WebViewResponseEvent clear() {
      data = null;
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.data != null) {
        output.writeString(1, this.data);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.data != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.data);
      }
      return size;
    }

    @Override
    public WebViewResponseEvent mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.data = input.readString();
            break;
          }
        }
      }
    }

    public static WebViewResponseEvent parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new WebViewResponseEvent(), data);
    }

    public static WebViewResponseEvent parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new WebViewResponseEvent().mergeFrom(input);
    }
  }
}
